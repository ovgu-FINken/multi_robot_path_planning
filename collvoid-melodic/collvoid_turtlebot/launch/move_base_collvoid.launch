<launch>
    <!-- Arguments -->
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="robot_name" default="tb3_1" />

    <group ns="/$(arg robot_name)">
        <!-- move_base -->
        <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">            <!--for debugging additionally append: launch-prefix="gdbserver :1234"-->
            <rosparam command="load" file="$(find collvoid_turtlebot)/params_collvoid_planner_bm/costmap_common_params.yaml" ns="local_costmap" />
            <rosparam command="load" file="$(find collvoid_turtlebot)/params_collvoid_planner_bm/costmap_common_params.yaml" ns="global_costmap" />
            <rosparam command="load" file="$(find collvoid_turtlebot)/params_collvoid_planner_bm/local_costmap_params.yaml" />
            <rosparam command="load" file="$(find collvoid_turtlebot)/params_collvoid_planner_bm/global_costmap_params.yaml" />

            <rosparam command="load" file="$(find collvoid_turtlebot)/params_collvoid_planner_bm/collvoid_config.yaml" />
            <rosparam command="load" file="$(find collvoid_turtlebot)/params_collvoid_planner_bm/move_base_params_collvoid.yaml" />
            <rosparam command="load" file="$(find collvoid_turtlebot)/params_collvoid_planner_bm/collvoid_common.yaml" ns="CollvoidScoring" />
            <rosparam command="load" file="$(find collvoid_turtlebot)/params_collvoid_planner_bm/collvoid_common.yaml" ns="CollvoidLocalPlanner" />


            <!-- Overwrite robot specific paramters -->
            <!-- https://answers.ros.org/question/61377/local-planner-creation/ -->
            <param name="base_local_planner" value="collvoid_local_planner/CollvoidLocalPlanner" />
            <param name="base_global_planner" value="navfn/NavfnROS" />

            <!-- /from uncertainty grid move_base launch file-->
            <param name="global_costmap/obstacle_layer/scan/sensor_frame" value="$(arg robot_name)/base_scan" />
            <param name="global_costmap/obstacle_layer/scan/topic" value="/$(arg robot_name)/scan" />
            <param name="global_costmap/robot_base_frame" value="$(arg robot_name)/base_footprint" />
            <param name="global_costmap/global_frame" value="map" />

            <param name="local_costmap/obstacle_layer/scan/sensor_frame" value="$(arg robot_name)/base_scan" />
            <param name="local_costmap/obstacle_layer/scan/topic" value="/$(arg robot_name)/scan" />
            <param name="local_costmap/robot_base_frame" value="$(arg robot_name)/base_footprint" />
            <param name="local_costmap/global_frame" value="$(arg robot_name)/odom" />
            <!-- from uncertainty grid move_base launch file/ -->

            <param name="CollvoidScoring/global_frame_id" value="map"/>
            <param name="DWAPlannerROS/global_frame_id" value="map"/>

            <remap from="odom" to="/$(arg robot_name)/odom"/>
        </node>

        <rosparam command="load" file="$(find collvoid_turtlebot)/params_collvoid_planner_bm/me_publisher.yaml"/>
        <rosparam command="load" file="$(find collvoid_turtlebot)/params_collvoid_planner_bm/collvoid_common.yaml" ns="collvoid" />
        <param name="collvoid/base_frame" value="$(arg robot_name)/base_link"/>
        <param name="collvoid/global_frame_id" value="map"/>

        <!-- Position sharing -->
        <node pkg="collvoid_local_planner" type="MePublisher" name="me_publisher" output="screen" />
        <node pkg="collvoid_controller" type="position_share_controller.py" name="position_share_controller" output="screen" />
    </group>
</launch>