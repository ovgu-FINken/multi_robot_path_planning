#### general move base params
shutdown_costmaps: false
controller_frequency: 10.0
planner_patience: 5.0
controller_patience: 15.0
conservative_reset_dist: 3.0
# planner_frequency: 5.0
oscillation_timeout: 10.0
oscillation_distance: 0.2
holonomic_robot: false
holo_robot: false

### DWA params
DWAPlannerROS:
  # Robot Configuration Parameters
  max_vel_x: 0.22
  min_vel_x: -0.11 #-0.22

  max_vel_y: 0.0
  min_vel_y: 0.0

  # The velocity when robot is moving in a straight line
  max_vel_trans: 0.22
  min_vel_trans: 0.08 #0.11

  max_vel_theta: 2.75
  min_vel_theta: 0.8 #1.37

  acc_lim_x: 2.5
  acc_lim_y: 0.0
  acc_lim_theta: 3.2

  # Goal Tolerance Parametes
  xy_goal_tolerance: 0.08
  yaw_goal_tolerance: 0.8
  latch_xy_goal_tolerance: false

  # Forward Simulation Parameters
  sim_time: 1.7 #TODO 2.0 and 1.2
  vx_samples: 20
  vy_samples: 0
  vth_samples: 40

  # Trajectory Scoring Parameters
  path_distance_bias: 32.0 #24.0 weighting for how much it should stick to the global path plan
  goal_distance_bias: 20.0 # weighting for how much it should attempt to reach its goal
  occdist_scale: 0.08 #weighting for how much the controller should avoid obstacles
  collvoid_scale: 24.0 #The weight for the collvoid part of the cost function
  twirling_scale: 0.2 #The weight for penalizing any changes in robot heading

  forward_point_distance: 0.325 #how far along to place an additional scoring point
  stop_time_buffer: 0.2 # amount of time a robot must stop in before colliding for a valid traj.
  scaling_speed: 0.25 # absolute velocity at which to start scaling the robot's footprint
  max_scaling_factor: 0.2 # how much to scale the robot's footprint when at speed.

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.15

  # Debugging
  publish_traj_pc: false
  publish_cost_grid_pc: false

CollvoidLocalPlanner:
  # Robot Configuration Parameters
  max_vel_x: 0.22
  min_vel_x: -0.22

  max_vel_y: 0.0
  min_vel_y: 0.0

  # The velocity when robot is moving in a straight line
  max_vel_trans: 0.22
  min_vel_trans: 0.11

  max_vel_theta: 2.75
  min_vel_theta: 1.37

  acc_lim_x: 2.5
  acc_lim_y: 0.0
  acc_lim_theta: 3.2

  footprint: [[-0.105, -0.08], [-0.105, 0.08], [0.041, 0.105], [0.041, -0.105]]
  robot_radius: 0.105

  ## all default from config file
  # path_distance_bias: 32.0 #weighting for how much it should stick to the global path plan
  # goal_distance_bias: 24.0 #weighting for how much it should attempt to reach its goal
  # sim_time: 1.7 #TODO 1.2 and 2.0
  # occdist_scale: 0.05 #weighting for how much the controller should avoid obstacles
  # collvoid_scale: 24.0
  # forward_point_distance: 0.325 # how far along to place an additional scoring point
  # stop_time_buffer: 0.2 # amount of time a robot must stop in before colliding for a valid traj.
  # scaling_speed: 0.25 # absolute velocity at which to start scaling the robot's footprint
  # max_scaling_factor: 0.2 # how much to scale the robot's footprint when at speed.

  # # Oscillation Prevention Parameters
  # oscillation_reset_dist: 0.05 #0.15
  # vx_samples: 20
  # vtheta_samples: 40
  # use_dwa: true

  max_neighbors: 10
  neighbor_dist: 5.0
  time_horizon: 5.0
  time_horizon_obst: 10.0
  threshold_last_seen: 1.0

  scale_radius_factor: 0.5
  
  xy_goal_tolerance: 0.1
  yaw_goal_tolerance: 0.5
  global_frame: /map
  wheel_base: 0.25
  time_to_holo: 0.4
  min_error_holo: 0.05
  max_error_holo: 0.15
  holo_robot: false

#### global planner
NavfnROS:
  default_tolerance: 0.08

#### Recovery
recovery_behaviors:
  - {
      name: conservative_reset,
      type: clear_costmap_recovery/ClearCostmapRecovery,
    }
  - { name: rotate_recovery, type: rotate_recovery/RotateRecovery }
  - {
      name: aggressive_reset,
      type: clear_costmap_recovery/ClearCostmapRecovery,
    }
  - { name: rotate, type: rotate_recovery/RotateRecovery }
  - {
      name: really_aggressive_reset,
      type: clear_costmap_recovery/ClearCostmapRecovery,
    }

conservative_reset:
  layer_names: ["obstacle_layer", "stationary _robots"]
  reset_distance: 2.0

aggressive_reset:
  layer_names: ["obstacle_layer", "stationary _robots"]
  reset_distance: 0.38

really_aggressive_reset:
  layer_names: ["obstacle_layer", "stationary _robots"]
  reset_distance: 0.25
